<launch>

    <!-- MAVROS posix SITL environment launch script -->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0.1"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="1.57"/>

    <arg name="est" default="lpe"/>
    <arg name="vehicle" default="f450-depth"/>
    <arg name="world" default="$(find mavlink_sitl_gazebo)/worlds/trainworld_0.world"/>
    <arg name="sdf" default="$(find mavlink_sitl_gazebo)/models/$(arg vehicle)/$(arg vehicle).sdf"/>

    <arg name="rcS" default="$(find px4)/posix-configs/SITL/init/$(arg est)/$(arg vehicle)"/>

    <arg name="headless" default="true"/>
    <arg name="gui" default="false"/>
    <arg name="ns" default="/"/>
    <arg name="fcu_url" default="udp://:14540@localhost:14557"/>

    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>

    <include file="$(find px4)/launch/posix_sitl.launch">
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="z" value="$(arg z)"/>
        <arg name="R" value="$(arg R)"/>
        <arg name="P" value="$(arg P)"/>
        <arg name="Y" value="$(arg Y)"/>
        <arg name="world" value="$(arg world)"/>
        <arg name="vehicle" value="$(arg vehicle)"/>
        <arg name="sdf" value="$(arg sdf)"/>
        <arg name="rcS" value="$(arg rcS)"/>
        <arg name="headless" value="$(arg headless)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="ns" value="$(arg ns)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="true"/>
    </include>

    <node pkg="tf" type="static_transform_publisher" name="stereo_optical_broadcaster" args="0.12 -0 0.06 0 0 -1.571 /base_link /camera_depth_frame 100" />

    <node pkg="tf" type="static_transform_publisher" name="base_fcu_broadcaster" args="0.12 -0 0.06 0 0 -1.571 /base_link /fcu 100" />

    <node pkg="tf" type="static_transform_publisher" name="map_camera_broadcaster" args="0.12 -0 0.06 -3.14  0 -1.571 /camera_depth_frame /map  100" />

    <node pkg="tf" type="static_transform_publisher" name="stereo_foot_broadcaster" args="0.12 -0 0.06  0 -1.57 1.57 /camera_depth_frame /base_footprint 100" />

    <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />
      <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
      <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
        <remap from="~input" to="/camera/depth/points" />
        <rosparam>
          filter_field_name: z
          filter_limit_min: 0.01
          filter_limit_max: 20
          filter_limit_negative: False
          leaf_size: 0.5
       </rosparam>
    </node>

     <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
      <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
            args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
         <param name="scan_height" value="10"/> 
         <param name="scan_time" value="0.033"/>
         <param name="range_min" value="0.45"/>
         <param name="range_max" value="20.0"/>
         <param name="output_frame_id" value="/camera_depth_frame"/>
         <remap from="image" to="/camera/depth/image_raw"/>
         <remap from="/scan" to="/laser_scan"/> 
      </node>

     <!-- SLAM -->
      <group ns="rtabmap">
        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
              <param name="frame_id" type="string" value="base_footprint"/>

              <param name="subscribe_depth" type="bool" value="true"/>
              <param name="subscribe_scan" type="bool" value="false"/>

              <remap from="odom" to="/mavros/local_position/odom"/>
              <remap from="subscribe_depth" to="/camera/depth/image_raw"/>

              <remap from="rgb/image" to="/camera/rgb/image_raw"/>
              <remap from="depth/image" to="/camera/depth/image_raw"/>
              <remap from="rgb/camera_info" to="/camera/rgb/camera_info"/>

              <param name="queue_size" type="int" value="10"/>

              <!-- RTAB-Map's parameters -->
              <param name="RGBD/ProximityBySpace"     type="string" value="false"/>
              <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
              <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
              <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
              <param name="Optimizer/Slam2D"          type="string" value="true"/>
              <param name="Reg/Strategy"              type="string" value="1"/> <!-- 1=ICP -->
              <param name="Reg/Force3DoF"             type="string" value="true"/>
              <param name="Vis/MaxDepth"              type="string" value="12.0"/>
              <param name="Vis/MinInliers"            type="string" value="5"/>
              <param name="Vis/InlierDistance"        type="string" value="0.05"/>
              <param name="Rtabmap/TimeThr"           type="string" value="700"/>
              <param name="Mem/RehearsalSimilarity"   type="string" value="0.45"/>
              <param name="Icp/CorrespondenceRatio"   type="string" value="0.5"/>
              <param name="grid_unknown_space_filled" type="bool" value="false"/>
              <param name="grid_eroded" type="bool" value="true"/>
              <param name="grid_cell_size" type="double" value="0.05"/>
        </node>
      </group>
    <include file="$(find px4)/launch/mavros.launch">
        <arg name="ns" value="$(arg ns)"/>
        <arg name="gcs_url" value=""/> <!-- GCS link is provided by SITL -->
        <arg name="fcu_url" value="$(arg fcu_url)"/>
    </include>
</launch>

<!-- vim: set et ft=xml fenc=utf-8 ff=unix sts=0 sw=4 ts=4 : -->
